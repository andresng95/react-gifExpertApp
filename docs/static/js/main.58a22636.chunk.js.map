{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","Proptypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAmCC,mBAAS,IAA5C,mBAAMC,EAAN,KAAkBC,EAAlB,KAcA,OACI,sBAAMC,SATW,SAACC,GACdA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAKtB,SACI,uBACAO,KAAO,OACPC,MAAOT,EACPU,SAjBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aAsB/BZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,Y,oCC7BpBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACVC,EADU,iDACsCC,UAAUH,GADhD,+DAEGI,MAAMF,GAFT,cAEVG,EAFU,gBAGKA,EAAKC,OAHV,uBAGTC,EAHS,EAGTA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARzB,kBAWTM,GAXS,4CAAH,sDCERO,G,KAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,sBAAKgB,UAAU,6DAAf,UACC,qBAAKC,IAAOjB,EAAKkB,IAAOR,IACxB,4BAAIA,SCHAS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAGrB,ECLwB,SAACA,GAEzB,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAhBAC,qBAAU,WAEN1B,EAAQC,GACP0B,MAAK,SAAAC,GACLC,YAAW,WACRJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAEX,UAGR,CAACtB,IAIIuB,EDnBgBM,CAAa7B,GAA7BO,EAAP,EAAOA,KAAKe,EAAZ,EAAYA,QAIZ,OACI,qCACF,oBAAIJ,UAAU,8CAAd,SAA8DlB,IAC9DsB,GAAW,wCACR,qBAAKJ,UAAU,8CAAf,SAEOX,EAAKE,KAAI,SAAAC,GAAG,OACT,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEhBfmB,EAAe,WAGvB,MAAqChD,mBAAS,CAAC,oBAA/C,mBAAOiD,EAAP,KAAmBlD,EAAnB,KAMD,OACI,qCACI,gDAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBACA,6BAEQkD,EAAWtB,KAAI,SAAAT,GAAQ,OACvB,cAAC,EAAD,CAEAA,SAAUA,GADJA,Y,MClB1BgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.58a22636.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Proptypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const[inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n    \r\n    const handleSubmit = (e) =>{\r\n            e.preventDefault();\r\n            if(inputValue.trim().length >2){\r\n                setCategories(cats =>[inputValue,...cats]);\r\n                setInputValue('');\r\n            }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n            type = \"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype = {\r\n    setCategories: Proptypes.func.isRequired\r\n}\r\n","\r\n export const getGifs = async (category) =>{\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=z5QmaIPpCSbycj3QyVSgHTPBckLMiF7m`\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n        const gifs = data.map(img =>{\r\n            return{\r\n                id:img.id,\r\n                title: img.title,\r\n                url: img.images.downsized_medium.url\r\n            }\r\n        })\r\n        return gifs;\r\n    }","import React from 'react'\r\nimport \"animate.css\"\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log(id,title,url)\r\n    return (\r\n        <div className=\"card className=card-grid animate__animated animate__bounce\">\r\n         <img src = {url} alt = {title}/>\r\n         <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport \"animate.css\"\r\n\r\nexport const GifGrid = ({category}) => {\r\n    //const [count, setCount] = useState(0);\r\n\r\n    const {data,loading} = useFetchGifs(category);\r\n\r\n   \r\n   // getGifs();\r\n    return (\r\n        <>\r\n      <h3 className=\"card-grid animate__animated animate__bounce\" >{category}</h3>\r\n     {loading && <p>loading</p>}\r\n        {<div className=\"card-grid animate__animated animate__bounce\">\r\n                {\r\n                data.map(img=>(\r\n                   <GifGridItem\r\n                   key={img.id}\r\n                   {...img}\r\n                   />\r\n                ))\r\n                }\r\n     \r\n        </div> }\r\n        </>\r\n    )\r\n}\r\n","import {useEffect, useState}from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\nimport \"animate.css\"\r\nexport const useFetchGifs = (category) =>{\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading:true\r\n        \r\n    });\r\n\r\n    useEffect(()=>{\r\n        \r\n        getGifs(category)\r\n        .then(imgs =>{\r\n         setTimeout(() => {\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n             })\r\n            },3000);\r\n         });\r\n         \r\n    },[category])\r\n \r\n\r\n    \r\n    return state; //{data:[], loading:true}   \r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    //const categories = ['Assassins Creed', 'Dragon Ball', 'God of War']\r\n     const [categories, setCategories] =  useState(['Assassins Creed']);\r\n    \r\n    //  const handleAdd = () =>{\r\n    //      setCategories([...categories,'hunterxhunter']);\r\n    //  }\r\n\r\n    return (\r\n        <>\r\n            <h2>GIFEXPERT APP </h2>\r\n\r\n            <AddCategory setCategories={setCategories}/>\r\n\r\n            <hr/>   \r\n            <ol>\r\n                {\r\n                    categories.map(category=>(\r\n                    <GifGrid \r\n                    key ={category}\r\n                    category={category}\r\n                    />)\r\n                    \r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\nimport \"animate.css\"\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}